{"version":3,"file":"Numbat.js","names":["Numbat","constructor","transport","scrambleKey","decorateAppAPIMethods","getAddress","account","index","display","cla","ins","p1","p2","data","Buffer","alloc","writeInt32BE","writeUInt32BE","response","send","addressLength","address","slice","toString","setAddress","signTransaction","rawTx","curveMask","apdus","offset","length","isFirst","maxChunkSize","hasMore","chunkSize","apdu","copy","push","Error","getAppConfiguration","contractData","accountIndex","addressIndex","version","exports","default"],"sources":["../src/Numbat.js"],"sourcesContent":["//@flow\n\nimport type Transport from \"@ledgerhq/hw-transport\";\n\nexport default class Numbat {\n  transport: Transport<*>;\n\n  constructor(transport: Transport<*>, scrambleKey: string = \"rEWA\") {\n    this.transport = transport;\n    transport.decorateAppAPIMethods(\n      this,\n      [\"getAddress\", \"setAddress\", \"signTransaction\", \"getAppConfiguration\"],\n      scrambleKey\n    );\n  }\n\n  async getAddress(\n    account: number,\n    index: number,\n    display?: boolean,\n  ): Promise<{\n    address: string,\n  }> {\n    const cla = 0xed;\n    const ins = 0x03;\n    const p1 = display ? 0x01 : 0x00;\n    const p2 = 0x00;\n    const data = Buffer.alloc(8);\n\n    data.writeInt32BE(account, 0);\n    data.writeUInt32BE(index, 4);\n\n    const response = await this.transport.send(cla, ins, p1, p2, data);\n\n    const addressLength = response[0];\n    const address = response.slice(1, 1 + addressLength).toString(\"ascii\");\n\n    return {address};\n  }\n\n  async setAddress(\n    account: number,\n    index: number,\n    display?: boolean,\n  ) {\n    const cla = 0xed;\n    const ins = 0x05;\n\n    const p1 = display ? 0x01 : 0x00;\n    const p2 = 0x00;\n    const data=Buffer.alloc(8)\n    data.writeInt32BE(account, 0);\n    data.writeUInt32BE(index, 4);\n\n    await this.transport.send(cla, ins, p1, p2, data);\n  }\n\n  async signTransaction(\n    rawTx: Buffer,\n  ): Promise<string> {\n    const curveMask = 0x80;\n\n    const apdus = [];\n    let offset = 0;\n\n    while (offset !== rawTx.length) {\n      const isFirst = offset === 0;\n      const maxChunkSize = 150;\n\n      const hasMore = offset + maxChunkSize < rawTx.length;\n      const chunkSize = hasMore ? maxChunkSize : rawTx.length - offset;\n\n      const apdu = {\n        cla: 0xed,\n        ins: 0x04,\n        p1: isFirst ? 0x00 : 0x80,\n        p2: curveMask,\n        data: Buffer.alloc(chunkSize),\n      };\n\n      rawTx.copy(apdu.data, 0, offset, offset + chunkSize);\n\n      apdus.push(apdu);\n      offset += chunkSize;\n    }\n\n    let response = Buffer.alloc(0);\n    for (let apdu of apdus) {\n      response = await this.transport.send(\n        apdu.cla,\n        apdu.ins,\n        apdu.p1,\n        apdu.p2,\n        apdu.data\n      );\n    }\n\n    if (response.length !== 67 || response[0] !== 64) {\n      throw new Error(\"invalid signature receuved from ledger device\")\n    }\n\n    return response.slice(1, response.length - 2).toString(\"hex\");\n  }\n\n  async getAppConfiguration(): Promise<{\n    version: string,\n  }> {\n    const response = await this.transport.send(0xed, 0x02, 0x00, 0x00);\n    return {\n      contractData: response[0],\n      accountIndex: response[1],\n      addressIndex: response[2],\n      version: `${response[3]}.${response[4]}.${response[5]}`\n    }\n  }\n}"],"mappings":"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","ignoreList":[]}